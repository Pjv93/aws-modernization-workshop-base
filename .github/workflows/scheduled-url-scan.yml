name: Monthly URL Security Scan

on:
  schedule:
    # Run monthly on the 1st at 2 AM UTC
    - cron: '0 2 1 * *'
  workflow_dispatch: # Allow manual trigger

jobs:
  scan-all-urls:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Scan all URLs in repository
      run: |
        python3 << 'EOF'
        import re, os, requests, sys
        
        def find_all_urls():
            urls = []
            for root, dirs, files in os.walk('.'):
                for file in files:
                    if file.endswith(('.md', '.txt', '.html', '.yml', '.yaml')):
                        try:
                            with open(os.path.join(root, file), 'r') as f:
                                content = f.read()
                                urls.extend(re.findall(r'https?://[^\s<>"\'`]+', content))
                        except: pass
            return list(set(urls))
        
        def check_url_content(url):
            try:
                response = requests.get(url, headers={'User-Agent': 'SecurityBot/1.0'}, timeout=10, allow_redirects=True)
                content = (response.url + response.text).lower()[:5000]
                
                # Broad keywords (any occurrence)
                broad_indicators = ['porn', 'xxx', 'sex', 'nude', 'erotic', 'nsfw', '18+', 'explicit', 'hardcore', 'webcam', 'escort', 'fetish']
                
                # Contextual adult patterns (more specific)
                adult_patterns = ['adult content', 'adult site', 'adult entertainment', 'adult videos', 'adult material', 'adult webcam']
                
                # Check broad indicators
                for indicator in broad_indicators:
                    if indicator in content:
                        return True, indicator
                
                # Check contextual adult patterns
                for pattern in adult_patterns:
                    if pattern in content:
                        return True, pattern
                        
                return False, None
            except: return False, None
        
        urls = find_all_urls()
        print(f"üîç Monthly scan: Checking {len(urls)} URLs in repository...")
        
        blocked = []
        for url in urls:
            print(f"Checking: {url}")
            is_adult, reason = check_url_content(url)
            if is_adult:
                blocked.append(f"{url} - {reason}")
                print(f"‚ùå COMPROMISED: {url} - {reason}")
            else:
                print(f"‚úÖ Clean: {url}")
        
        if blocked:
            print(f"\nüö® SECURITY ALERT: {len(blocked)} compromised URLs found!")
            for url in blocked:
                print(f"  - {url}")
            print("\nAction required: Remove or replace these URLs")
            sys.exit(1)
        else:
            print(f"\n‚úÖ Monthly scan complete: All {len(urls)} URLs are clean")
        EOF
