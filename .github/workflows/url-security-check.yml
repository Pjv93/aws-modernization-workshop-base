name: URL Security Check

on:
  pull_request:
  push:
    branches: [ main, master ]

jobs:
  url-security-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Check URLs for inappropriate content
      run: |
        python3 << 'EOF'
        import re, subprocess, sys, requests

        def extract_urls_from_diff():
            try:
                result = subprocess.run(['git', 'diff', 'HEAD~1', 'HEAD'], capture_output=True, text=True)
                urls = []
                for line in result.stdout.split('\n'):
                    if line.startswith('+') and not line.startswith('+++'):
                        urls.extend(re.findall(r'https?://[^\s<>"\'`]+', line))
                return list(set(urls))
            except: return []

        def check_url_content(url):
            try:
                response = requests.get(url, headers={'User-Agent': 'SecurityBot/1.0'}, timeout=10, allow_redirects=True)
                content = (response.url + response.text).lower()[:5000]
                
                # Broad keywords (any occurrence)
                broad_indicators = ['porn', 'xxx', 'sex', 'nude', 'erotic', 'nsfw', '18+', 'explicit', 'hardcore', 'webcam', 'escort', 'fetish']
                
                # Contextual adult patterns (more specific)
                adult_patterns = ['adult content', 'adult site', 'adult entertainment', 'adult videos', 'adult material', 'adult webcam']
                
                # Check broad indicators
                for indicator in broad_indicators:
                    if indicator in content:
                        return True, indicator
                
                # Check contextual adult patterns
                for pattern in adult_patterns:
                    if pattern in content:
                        return True, pattern
                        
                return False, None
            except: return False, None

        urls = extract_urls_from_diff()
        if not urls: 
            print("‚úÖ No URLs found in commit")
            sys.exit(0)
        
        print(f"üîç Checking {len(urls)} URLs...")
        blocked = False
        for url in urls:
            print(f"Checking: {url}")
            is_adult, reason = check_url_content(url)
            if is_adult:
                print(f"‚ùå BLOCKED: {url} - {reason}")
                blocked = True
            else:
                print(f"‚úÖ Clean: {url}")
        
        if blocked:
            print("\n‚ùå SECURITY CHECK FAILED: Inappropriate content detected!")
            sys.exit(1)
        else:
            print("\n‚úÖ All URLs passed content check")
            sys.exit(0)
        EOF
